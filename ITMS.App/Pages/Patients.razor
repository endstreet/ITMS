@page "/patients"
@page "/patients/{hospitalcode}"
@using ITMS.App.Data
@using ITMS.Models
@inject ESBService ESBService

<h1>Register Data</h1>

<p>This component fetches demo data from the Service layer (ESB Api).</p>

@if (registers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenGrid AllowFiltering="true" AllowPaging="true" PageSize="4" AllowSorting="true" Data="@registers" TItem="Register" ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="Register" Property="Patient.TheatreCode" Title="Theatre" />
            <RadzenGridColumn TItem="Register" Property="Patient.TheatreName" Title="Theatre name" />
            <RadzenGridColumn TItem="Register" Property="Patient.PatientSurname" Title="Patient" />
            <RadzenGridColumn TItem="Register" Property="Patient.PatientInitials" Title="Initials" />
            <RadzenGridColumn TItem="Register" Property="Patient.AdmissionDate" Title="Start" />
            <RadzenGridColumn TItem="Register" Property="Patient.Surgeon1Name" Title="Surgeon" />
        </Columns>
    </RadzenGrid>
}


@code {

    [Parameter] private string facilitycode { get; set; } = "ZZ";
    [Parameter] private string fromdate { get; set; } = "ZZ";
    [Parameter] private string todate { get; set; } = "ZZ";

    IEnumerable<Register> registers;
    Patient firstPatient;

    protected override async Task OnInitAsync()
    {
        registers = await ESBService.GetRegisters(facilitycode, fromdate, todate);
        firstPatient = registers.First().Patient;
    }
}
