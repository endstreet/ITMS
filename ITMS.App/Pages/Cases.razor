@page "/cases"
@page "/cases/{facilitycode}/{doctorcode}/{theatrecode}/{fromdate}/{todate}"

@using ITMS.App.Data
@using ITMS.Models
@inject ESBService ESBService

<h1>Cases</h1>

<p>This component fetches demo data from the Service layer (ESB Api).</p>

@if (cases == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenGrid AllowFiltering="true" AllowPaging="true" PageSize="4" AllowSorting="true" Data="@cases" TItem="Case" ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="Case" Property="TheatreNumber" Title="Theatre" />
            <RadzenGridColumn TItem="Case" Property="PatientName" Title="Name" />
            <RadzenGridColumn TItem="Case" Property="ProcedureStartDateTime" Title="Start" />
            <RadzenGridColumn TItem="Case" Property="ProcedureDuration" Title="Duration" />
        </Columns>
    </RadzenGrid>
}


@code {

    [Parameter] private string facilitycode { get; set; } = "ZZ";
    [Parameter] private string doctorcode { get; set; } = "ZZ";
    [Parameter] private string theatrecode { get; set; } = "ZZ";
    [Parameter] private string fromdate { get; set; } = "ZZ";
    [Parameter] private string todate { get; set; } = "ZZ";

    IEnumerable<Case> cases;

    protected override async Task OnInitAsync()
    {
        cases = await ESBService.GetCases(facilitycode, "doctorcode", "theatrecode", "fromdate", "todate");
    }
}
